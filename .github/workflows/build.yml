name: Envoy/build-tools

permissions:
  contents: read

on:
  push:
    branches:
    - main
  pull_request:


jobs:
  build_image:
    if: >-
      ${{
          github.repository == 'envoyproxy/envoy-build-tools'
          || vars.ENVOY_CI_RUN == 'true'
      }}
    strategy:
      fail-fast: false
      matrix:
        target: [ubuntu, debian]
        arch: [amd64, arm64]
    name: Build (${{ matrix.target }}-${{ matrix.arch }})
    uses: ./.github/workflows/_build_image.yml
    with:
      distro: ${{ matrix.target }}
      os_family: ${{ matrix.os_family != '' && matrix.os_family || 'linux' }}
      host-platform: ${{ matrix.arch }}
      runs-on: ${{ matrix.arch == 'amd64' && 'ubuntu-22.04' || 'ubuntu-22.04-arm' }}
      target-platforms: ${{ matrix.arch == 'amd64' && 'linux/amd64' || 'linux/arm64' }}

  push-manifests:
    name: Create manifests (${{ github.event_name == 'pull_request' && 'dry run' || 'push' }})
    runs-on: ubuntu-latest
    needs: [build_image]
    permissions:
      contents: read
      packages: write
    steps:
    - name: 'Checkout repository'
      uses: actions/checkout@v4
    - uses: docker/login-action@v3
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: 'Login to GCR'
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" | base64 --decode | gcloud auth activate-service-account --key-file=-
        gcloud auth configure-docker --quiet
    - uses: docker/setup-buildx-action@v3
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./oci-images
    - name: Load images and create manifests
      run: |
        chmod +x ./docker/linux/load_and_push_manifests.sh
        ./docker/linux/load_and_push_manifests.sh
      env:
        OCI_IMAGES_PATH: ./oci-images
        PUSH_GCR_IMAGE: true
        GCR_IMAGE_NAME: ${{ vars.GCR_IMAGE_NAME || 'envoy-build' }}
        DRY_RUN: ${{ github.event_name == 'pull_request' && 'true' || 'false' }}
