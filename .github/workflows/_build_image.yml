name: Build image

permissions:
  contents: read

on:
  workflow_call:
    secrets:
      dockerhub_username:
      dockerhub_password:
      gcp_key:

    inputs:
      image_prefix:
        type: string
        default: envoyproxy/envoy-build-

      os_family:
        type: string
        default: linux

      distro:
        type: string
        required: true

      host-platform:
        type: string
        required: true
      target-platforms:
        type: string
        required: true
      runs-on:
        type: string
        required: true

      go_version:
        type: string
        default: '1.16'

      gcr_push:
        type: boolean
        default: false
      gcr_name:
        type: string
        default:


concurrency:
  group: ${{ github.workflow }}-${{ inputs.distro }}-${{ inputs.host-platform }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  image:
    name: |
      [${{ inputs.host-platform }}] Build and test Docker image
    runs-on: ${{ inputs.runs-on }}
    steps:
    - name: 'Checkout repository'
      uses: actions/checkout@v4
    - run: |
        CONTAINER_TAG=$(git log -1 --pretty=format:"%H" "./docker")
        echo "tag=${CONTAINER_TAG}" >> "$GITHUB_OUTPUT"
      id: container
      shell: bash
      name: Container hash
    - run: |
        cd docker
        ./push.sh
      name: Build (${{ inputs.image_prefix }}${{ inputs.distro }}@${{ steps.container.outputs.tag }})
      shell: bash
      env:
        BUILD_TOOLS_PLATFORMS: ${{ inputs.target-platforms  }}
        OS_FAMILY: ${{ inputs.os_family }}
        SOURCE_BRANCH: ${{ github.ref }}
        DOCKERHUB_USERNAME: ${{ secrets.dockerhub_username }}
        DOCKERHUB_PASSWORD: ${{ secrets.dockerhub_password }}
        GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.gcp_key }}
        IMAGE_PREFIX: ${{ inputs.image_prefix }}
        OS_DISTRO: ${{ inputs.distro }}
        PUSH_GCR_IMAGE: ${{ inputs.gcr_push }}
        GCR_IMAGE_NAME: ${{ inputs.gcr_name }}
        LOAD_IMAGE: ${{ github.event_name == 'pull_request' && 'true' || 'false' }}
