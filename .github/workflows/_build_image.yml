name: Build image

permissions:
  contents: read

on:
  workflow_call:
    inputs:
      image_prefix:
        type: string
        default: envoyproxy/envoy-build-

      os_family:
        type: string
        default: linux

      distro:
        type: string
        required: true

      host-platform:
        type: string
        required: true
      target-platforms:
        type: string
        required: true
      runs-on:
        type: string
        required: true

      go_version:
        type: string
        default: '1.16'


concurrency:
  group: ${{ github.workflow }}-${{ inputs.distro }}-${{ inputs.host-platform }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  image:
    name: |
      [${{ inputs.host-platform }}] Build and test Docker image
    runs-on: ${{ inputs.runs-on }}
    steps:
    - uses: envoyproxy/toolshed/gh-actions/bind-mounts@actions-v0.3.28
      with:
        mounts: |
          - src: /mnt/docker
            target: /var/lib/docker
            rm: true
            command-pre: sudo systemctl stop docker
            command-post: sudo systemctl start docker

    - name: 'Checkout repository'
      uses: actions/checkout@v5
    - run: |
        CONTAINER_TAG=$(git log -1 --pretty=format:"%H" "./docker")
        echo "tag=${CONTAINER_TAG}" >> "$GITHUB_OUTPUT"
      id: container
      shell: bash
      name: Container hash

    - run: |
        cd docker
        ./push.sh
      name: Build (${{ inputs.image_prefix }}${{ inputs.distro }}@${{ steps.container.outputs.tag }})
      shell: bash
      env:
        BUILD_TOOLS_PLATFORMS: ${{ inputs.target-platforms  }}
        OS_FAMILY: ${{ inputs.os_family }}
        SOURCE_BRANCH: ${{ github.ref }}
        IMAGE_PREFIX: ${{ inputs.image_prefix }}
        OS_DISTRO: ${{ inputs.distro }}
        CONTAINER_SHA: ${{ steps.container.outputs.tag }}
        SAVE_OCI: true
        LOAD_IMAGE: ${{ github.event_name == 'pull_request' && 'true' || 'false' }}
    - name: Upload OCI artifacts
      uses: actions/upload-artifact@v4
      with:
        name: oci-${{ inputs.distro }}-${{ inputs.host-platform }}
        path: ./docker/oci-output/*.tar
        retention-days: 1
        if-no-files-found: error
